@page "/admin/products"
@page "/admin"

@inherits OwningComponentBase<IMyDBRepository>

<table>
    <thead>
        <tr>
            <th>ID</th>
            <th>제품명</th>
            <th>카테고리</th>
            <th>단가</th>
            <td />
        </tr>
    </thead>
    <tbody>
        @if (ProductData?.Count() > 0)
        {
            @foreach (Product p in ProductData)
            {
                <tr>
                    <td>@p.Id</td>
                    <td><NavLink href="@GetProductDetail(p.Id)">@p.Name</NavLink></td>
                    <td>@p.Category</td>
                    <td>@p.Price.ToString("c")</td>
                    <td>
                        <NavLink href="@GetProductEdit(p.Id)">
                            제품수정
                        </NavLink>
                        <button @onclick="@(e => DeleteProduct(p))">
                            제품삭제
                        </button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="5">등록된 제품이 존재하지 않습니다.</td>
            </tr>
        }
    </tbody>
</table>
<NavLink href="/admin/products/create">제품추가</NavLink>

@code {
    public IMyDBRepository Repository => Service;
    public IEnumerable<Product> ProductData { get; set; } = Enumerable.Empty<Product>();

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        ProductData = await Repository.Products.ToListAsync();
    }

    public async Task DeleteProduct(Product p)
    {
        Repository.DeleteProduct(p);
        await UpdateData();
    }

    public string GetProductDetail(int id) => $"/admin/products/details/{id}";
    public string GetProductEdit(int id) => $"/admin/products/editor/{id}";
}